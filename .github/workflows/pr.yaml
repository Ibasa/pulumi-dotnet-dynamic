on:
  pull_request:
    paths-ignore:
      - 'CHANGELOG.md'
      - 'CHANGELOG_PENDING.md'
  push:
    branches:
      - main
    tags:
      - v*.*.*
    paths-ignore:
      - 'CHANGELOG.md'
      - 'CHANGELOG_PENDING.md'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PULUMI_CONFIG_PASSPHRASE: test

jobs:
  Lint:
    # We lint in a seperate job so we can use the dotnet 6.0 sdk which has dotnet format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core 6.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Lint with dotnet format
      run: dotnet format --verify-no-changes

  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup dotnet SDK v6.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Format Pulumi SDK
        run: dotnet format --verify-no-changes
      - name: Build 
        run: dotnet build

  Test:
    strategy:
        matrix:
          os: [ubuntu-latest, windows-latest, macos-11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup dotnet SDK v6.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Pulumi up
        uses: pulumi/actions@v4.4.0
        with:
          command: up
          upsert: true
          work-dir: ./Example
          stack-name: test-${{ matrix.os }}
          cloud-url: "file://"
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN_PRODUCTION }}
      - name: Pulumi down
        uses: pulumi/actions@v4.4.0
        with:
          command: destroy
          remove: true
          work-dir: ./Example
          stack-name: test-${{ matrix.os }}
          cloud-url: "file://"
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN_PRODUCTION }}

  Pack:    
    runs-on: ubuntu-latest
    needs: [Lint, Test]

    steps:
    - uses: actions/checkout@v2

    - name: Pack with dotnet
      run: dotnet pack --configuration Release --output output
    - name: Publish NuGet
      if: github.ref == 'refs/heads/main'
      run: dotnet nuget push -s https://api.nuget.org/v3/index.json -k ${NUGET_API_KEY} --skip-duplicate ./output/*.nupkg
      env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}